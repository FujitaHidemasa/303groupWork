<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.ItemMapper">

	<!-- 商品を全て取得 -->
	<select id="selectAll" resultType="com.example.entity.Item">
		SELECT
		id,
		name,
		price,
		overview,
		is_download AS isDownload,
		created_at AS createdAt,
		updated_at AS updatedAt
		FROM item
	</select>

	<!-- 特定の範囲のidの商品を全て取得 -->
	<select id="selectByRangeId" parameterType="map"
		resultType="com.example.entity.Item">
		SELECT
		id,
		name,
		price,
		overview,
		is_download AS isDownload,
		created_at AS createdAt,
		updated_at AS updatedAt
		FROM item
		WHERE id BETWEEN #{min} AND #{max}
	</select>

	<!-- idに一致した商品を取得 -->
	<select id="selectById" parameterType="long"
		resultType="com.example.entity.Item">
		SELECT
		id,
		name,
		price,
		overview,
		is_download AS isDownload,
		created_at AS createdAt,
		updated_at AS updatedAt
		FROM item
		WHERE id = #{id}
	</select>

	<!-- 商品を追加 -->
	<insert id="insert" parameterType="com.example.entity.Item"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO item (
		name,
		price,
		overview,
		categorys,
		created_at,
		updated_at
		) VALUES (
		#{name},
		#{price},
		#{overview},
		#{isDownload},
		CURRENT_TIMESTAMP,
		CURRENT_TIMESTAMP
		)
	</insert>

	<!-- 商品を更新 -->
	<update id="update" parameterType="com.example.entity.Item">
		UPDATE item
		SET
		name = #{name},
		price = #{price},
		overview = #{overview},
		is_download = #{isDownload},
		updated_at = CURRENT_TIMESTAMP
		WHERE id = #{id}
	</update>

	<!-- 商品を削除 -->
	<delete id="delete" parameterType="long">
		DELETE FROM item WHERE id =
		#{id}
	</delete>

</mapper>
